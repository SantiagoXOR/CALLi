name: Tests y Seguridad

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main, develop]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Instalar primero packaging para evitar conflictos
          pip install "packaging>=21.0,<28.0"
          # Instalar dependencias principales
          pip install -r requirements.txt
          # Instalar dependencias del backend
          pip install -r backend-call-automation/requirements.txt || echo "Advertencia: Algunos paquetes no pudieron instalarse, pero continuamos"

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Run backend tests
        run: |
          pytest tests/ --cov=app --cov-report=xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install KICS
        run: |
          curl -sfL 'https://raw.githubusercontent.com/Checkmarx/kics/master/install.sh' | sh

      - name: Run KICS scan
        run: |
          ./bin/kics scan -p . --config .kics.config -o security-reports
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: security-reports/

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install pre-commit
        run: |
          pip install pre-commit

      - name: Run pre-commit
        run: |
          pre-commit run --all-files
