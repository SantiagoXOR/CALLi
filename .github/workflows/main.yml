name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up job
        run: echo "Setting up job environment"
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: 'pip'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install backend dependencies
        working-directory: ./backend-call-automation
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov
      
      - name: Install frontend dependencies
        working-directory: ./frontend-call-automation
        run: |
          npm install --no-fund
      
      - name: Run backend tests
        working-directory: ./backend-call-automation
        run: |
          if [ -d "tests" ]; then
            pytest tests/ --cov=app
          else
            echo "No tests directory found, skipping backend tests"
          fi
      
      - name: Run frontend tests
        working-directory: ./frontend-call-automation
        run: |
          if [ -f "package.json" ] && grep -q "\"test\":" "package.json"; then
            npm test -- --passWithNoTests
          else
            echo "No test script found in package.json, skipping frontend tests"
          fi
      
      - name: Post Set up Node.js
        run: echo "Tests completed"

  build-docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: run-tests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend-call-automation
          push: false
          tags: calli-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Build frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend-call-automation
          push: false
          tags: calli-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
