name: "Security Scan"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '0 0 * * 3'  # Ejecutar cada miÃ©rcoles a medianoche

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Escaneo de seguridad para Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f backend-call-automation/requirements.txt ]; then
            pip install -r backend-call-automation/requirements.txt
          fi
          pip install bandit safety

      - name: Run Bandit (Python security scanner)
        run: |
          bandit -r backend-call-automation -f json -o bandit-results.json || true
          
      - name: Run Safety (Python dependency scanner)
        run: |
          safety check -r backend-call-automation/requirements.txt --json > safety-results.json || true

      # Escaneo de seguridad para JavaScript
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install JavaScript dependencies
        run: |
          if [ -f frontend-call-automation/package.json ]; then
            cd frontend-call-automation && npm ci
          fi
          
      - name: Run npm audit
        run: |
          if [ -f frontend-call-automation/package.json ]; then
            cd frontend-call-automation && npm audit --json > ../npm-audit-results.json || true
          fi

      # Publicar resultados
      - name: Upload security scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: bandit-results.json
          category: bandit
        if: always()
        continue-on-error: true
