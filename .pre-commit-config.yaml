repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-ast
      - id: check-json
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-executables-have-shebangs
      - id: check-shebang-scripts-are-executable
      - id: check-case-conflict
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: mixed-line-ending
        args: [--fix=lf]

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.6
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-python-dateutil
          - types-setuptools
          - types-toml
          - types-redis
          - types-urllib3

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types: [javascript, json]

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.18.1
    hooks:
      - id: gitleaks
        name: Detect hardcoded secrets
        description: Detect hardcoded secrets using Gitleaks
        entry: gitleaks protect --verbose --redact --staged
        language: system
        pass_filenames: false

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt$

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  - repo: local
    hooks:
      - id: validate-docs
        name: Validate Documentation
        entry: bash -c 'cd backend-call-automation/docs && make validate || true'
        language: system
        files: "^backend-call-automation/docs/"
        pass_filenames: false

      - id: check-rst
        name: Check RST files
        entry: rst-lint
        language: python
        files: \.rst$
        additional_dependencies: [docutils]

      - id: check-python-docstrings
        name: Check Python docstrings
        entry: python scripts/check_docstrings.py || true
        language: python
        types: [python]

      - id: check-typescript-jsdoc
        name: Check TypeScript JSDoc
        entry: node scripts/check_jsdoc.js || true
        language: node
        types: [ts, tsx]

      - id: check-docs-updated
        name: Check if documentation is updated with code
        entry: bash scripts/check_docs_updated.sh || true
        language: system
        pass_filenames: false
        stages: [pre-commit]

      - id: prevent-prohibited-workflows
        name: Prevent Prohibited Workflows
        entry: python .github/scripts/prevent_prohibited_workflows.py
        language: python
        files: \.github/workflows/.*\.yml$
        pass_filenames: true

      - id: check-types
        name: Check Python types with mypy
        entry: python scripts/check_types.py
        language: python
        types: [python]
        pass_filenames: false

      - id: run-backend-tests
        name: Run backend tests
        entry: python scripts/run_tests.py --backend
        language: python
        pass_filenames: false
        stages: [pre-push]

      - id: kics-security-scan
        name: Run KICS security scan
        entry: bash -c 'kics scan -p . --config .kics.config -o security-reports || true'
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: security-check-local
        name: Run local security check
        entry: python scripts/security_check_local.py
        language: python
        pass_filenames: false
        stages: [pre-commit, pre-push]
